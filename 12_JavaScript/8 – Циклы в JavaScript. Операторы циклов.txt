//1 цикл for

for(var i = 100; i > 5; i /= 2) {
  console.log("i = " + i);
}



//2 цикл while (тоже позволяет выполнять код несколько раз подряд)

var j = 1000;
while(j > 100) {
  console.log("j = " + j);
  j -= 100;
}

//такой пример неприменим в for (бесконечный цикл опасен для пк)
// var isHasCar = true
// while(isHasCar) {
//
// }



//3 цикл do while

//пример невыполн-го кода
var x = 100;
do {
  console.log("x = " + x);
} while(x < 50);

//пример выполн-го кода
var y = 0;
do {
  console.log("y = " + y);
  y++;
} while(y <= 10);



//4 операторы для циклов

//оператор break
for(var q = 10; q <= 20; q += 2) {
  if(q > 15)
    break;

  console.log("q = " + q);
}


// оператор continue; проверка на чётность
//четные не выводит
for(var w = 10; w <= 20; w += 2) {
  if(w % 2 == 0)
    continue; // позволяет пропустить итерацию цикла

  console.log("w = " + w);
}



//5 работа с массивами

var arr = [5, 7, 3, 8, 9, 21];

for(var a = 0; a < arr.length; a ++) {
  arr[a] *= 2;

  console.log("Element: " + (a + 1) + ": " + arr[a]);
}




/*
В языке JavaScript, как и в большинстве других языков, существует 3 основных вида циклов. Каждый из них выполняет одну и ту же роль, но записывается по-разному. Рассмотрим все три цикла.

Цикл For
В цикле for все условия записываются в одном месте, что очень удобно во многих случаях. Стандартная запись такого цикла выглядит следующим образом:

for (var i = 0; i < 10; i++)
	console.log(i);
В объявлении цикла записывается следующее: переменная цикла, её начальное значение и диапазон. В примере выше будут выведены числа от 0 до 10.



Если в теле цикла всего одна строка кода, то фигурные скобки можно пропустить и не записывать их.

Цикл While
Суть цикла while не особо отличается от цикла for. Единственное отличие заключается в способе записи цикла. В while необходимо прописать лишь условие, а все остальные параметры записываются вне цикла:

var i = 1; // Создание переменной
while (i <= 10) { // Здесь только условие
	console.log(i);
	i++; // Увеличение переменной
}
Цикл Do While
Цикл схож с циклом while по форме написания, но при этом работает немного по-другому. Цикл do..while будет выполнен один раз сто процентов, а дальше проверит условие и если оно верно, то цикл будет выполняться дальше:

var x = 13;
do {
	x--;
	console.log(x);
} while (x > 10);
Как видно из примера, цикл изначально неверный, но это не мешает ему сработать один раз.

Операторы для работы в циклах
Существует три основных оператора для работы в циклах:

Оператор break - служит для выхода из цикла полностью;
Оператор continue - пропускает лишь одну итерацию и не выходит из цикла.
*/
